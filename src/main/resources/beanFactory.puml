@startuml
interface BeanDefinitionReader {
~ BeanDefinitionRegistry getRegistry()
~ ResourceLoader getResourceLoader()
~ void loadBeanDefinitions(Resource)
~ void loadBeanDefinitions(String)
~ void loadBeanDefinitions(String[])
}

abstract class AbstractBeanDefinitionReader {
- BeanDefinitionRegistry registry
- ResourceLoader resourceLoader
+ BeanDefinitionRegistry getRegistry()
+ void loadBeanDefinitions(String[])
+ void setResourceLoader(ResourceLoader)
+ ResourceLoader getResourceLoader()
}


class BeanDefinition {
- Class beanClass
- PropertyValues propertyValues
+ Class getBeanClass()
+ void setBeanClass(Class)
+ PropertyValues getPropertyValues()
+ void setPropertyValues(PropertyValues)
}


class SimpleInstantiationStrategy {
+ Object instantiate(BeanDefinition)
}

interface InstantiationStrategy {
~ Object instantiate(BeanDefinition)
}

interface BeanFactory {
~ Object getBean(String)
}

class BeanReference {
- String beanName
+ String getBeanName()
}


interface BeanPostProcessor {
~ Object postProcessBeforeInitialization(Object,String)
~ Object postProcessAfterInitialization(Object,String)
}

class CglibSubclassingInstantiationStrategy {
+ Object instantiate(BeanDefinition)
}

class DefaultListableBeanFactory {
- Map<String,BeanDefinition> beanDefinitionMap
+ void registerBeanDefinition(String,BeanDefinition)
+ BeanDefinition getBeanDefinition(String)
+ boolean containsBeanDefinition(String)
+ String[] getBeanDefinitionNames()
}


interface AutowireCapableBeanFactory {
~ Object applyBeanPostProcessorsBeforeInitialization(Object,String)
~ Object applyBeanPostProcessorsAfterInitialization(Object,String)
}

interface ConfigurableBeanFactory {
~ void addBeanPostProcessor(BeanPostProcessor)
}

interface BeanFactoryPostProcessor {
~ void postProcessBeanFactory(DefaultListableBeanFactory)
}

interface SingletonBeanRegistry {
~ Object getSingleton(String)
}

interface BeanDefinitionRegistry {
~ void registerBeanDefinition(String,BeanDefinition)
~ BeanDefinition getBeanDefinition(String)
~ boolean containsBeanDefinition(String)
~ String[] getBeanDefinitionNames()
}

abstract class AbstractBeanFactory {
- List<BeanPostProcessor> beanPostProcessors
+ Object getBean(String)
# {abstract}Object createBean(String,BeanDefinition)
# {abstract}BeanDefinition getBeanDefinition(String)
+ void addBeanPostProcessor(BeanPostProcessor)
+ List<BeanPostProcessor> getBeanPostProcessors()
}


class DefaultSingletonBeanRegistry {
- Map<String,Object> singletonObjects
+ Object getSingleton(String)
# void addSingleton(String,Object)
}


abstract class AbstractAutowireCapableBeanFactory {
- InstantiationStrategy instantiationStrategy
+ InstantiationStrategy getInstantiationStrategy()
+ void setInstantiationStrategy(InstantiationStrategy)
# Object createBean(String,BeanDefinition)
# Object doCreateBean(String,BeanDefinition)
# Object createBeanInstance(BeanDefinition)
# Object initializeBean(String,Object,BeanDefinition)
# void invokeInitMethods(String,Object,BeanDefinition)
+ Object applyBeanPostProcessorsBeforeInitialization(Object,String)
+ Object applyBeanPostProcessorsAfterInitialization(Object,String)
# void applyPropertyValues(String,Object,BeanDefinition)
}


class XmlBeanDefinitionReader {
+ {static} String BEAN_ELEMENT
+ {static} String PROPERTY_ELEMENT
+ {static} String ID_ATTRIBUTE
+ {static} String NAME_ATTRIBUTE
+ {static} String CLASS_ATTRIBUTE
+ {static} String VALUE_ATTRIBUTE
+ {static} String REF_ATTRIBUTE
+ void loadBeanDefinitions(String)
+ void loadBeanDefinitions(Resource)
# void doLoadBeanDefinitions(InputStream)
}




BeanDefinitionReader <|.. AbstractBeanDefinitionReader
InstantiationStrategy <|.. SimpleInstantiationStrategy
InstantiationStrategy <|.. CglibSubclassingInstantiationStrategy
BeanDefinitionRegistry <|.. DefaultListableBeanFactory
AbstractAutowireCapableBeanFactory <|-- DefaultListableBeanFactory
BeanFactory <|-- AutowireCapableBeanFactory
BeanFactory <|-- ConfigurableBeanFactory
SingletonBeanRegistry <|-- ConfigurableBeanFactory
ConfigurableBeanFactory <|.. AbstractBeanFactory
DefaultSingletonBeanRegistry <|-- AbstractBeanFactory
SingletonBeanRegistry <|.. DefaultSingletonBeanRegistry
AutowireCapableBeanFactory <|.. AbstractAutowireCapableBeanFactory
AbstractBeanFactory <|-- AbstractAutowireCapableBeanFactory
AbstractBeanDefinitionReader <|-- XmlBeanDefinitionReader
@enduml